"""update table question

Revision ID: e4f70a4a2f05
Revises: 
Create Date: 2024-11-11 19:38:08.361690

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e4f70a4a2f05'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_users_cellphone', table_name='users')
    op.drop_index('ix_users_email', table_name='users')
    op.drop_index('ix_users_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.drop_table('users')
    op.drop_index('ix_type_real_estates_id', table_name='type_real_estates')
    op.drop_index('ix_type_real_estates_name', table_name='type_real_estates')
    op.drop_table('type_real_estates')
    op.drop_index('ix_comments_id', table_name='comments')
    op.drop_table('comments')
    op.drop_index('ix_questions_id', table_name='questions')
    op.drop_table('questions')
    op.drop_index('ix_real_estates_id', table_name='real_estates')
    op.drop_table('real_estates')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('real_estates',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('real_estates_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('amount_bathroom', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('amount_bedroom', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('available', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('image', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('lat_long', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('square_meter', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type_real_estate_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['type_real_estate_id'], ['type_real_estates.id'], name='real_estates_type_real_estate_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='real_estates_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_real_estates_id', 'real_estates', ['id'], unique=False)
    op.create_table('questions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('question', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='questions_pkey')
    )
    op.create_index('ix_questions_id', 'questions', ['id'], unique=False)
    op.create_table('comments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('amount_star', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('comment', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('commentator_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('real_estate_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['commentator_id'], ['users.id'], name='comments_commentator_id_fkey'),
    sa.ForeignKeyConstraint(['real_estate_id'], ['real_estates.id'], name='comments_real_estate_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='comments_pkey')
    )
    op.create_index('ix_comments_id', 'comments', ['id'], unique=False)
    op.create_table('type_real_estates',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='type_real_estates_pkey')
    )
    op.create_index('ix_type_real_estates_name', 'type_real_estates', ['name'], unique=True)
    op.create_index('ix_type_real_estates_id', 'type_real_estates', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('available', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('cellphone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('code_recuperation', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('qualification', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('role', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.create_index('ix_users_email', 'users', ['email'], unique=True)
    op.create_index('ix_users_cellphone', 'users', ['cellphone'], unique=True)
    # ### end Alembic commands ###
